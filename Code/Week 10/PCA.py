# -*- coding: utf-8 -*-
"""PCA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ycRGeN7dL4MCNznpzCmofzeGDIXoV0QV

# 0.) Import and Clean data
"""

import pandas as pd
from google.colab import drive
import matplotlib.pyplot as plt
import numpy as np

from sklearn.preprocessing import StandardScaler

import seaborn as sns
from sklearn.decomposition import PCA

drive.mount('/content/gdrive/', force_remount = True)

df = pd.read_csv("/content/gdrive/MyDrive/Econ441B/week 10/Country-data.csv", sep = ",")

df.head()

df.columns

names = df[["country"]]
X = df.drop(["country"], axis = 1)

scaler = StandardScaler().fit(X)
X_scaled = scaler.transform(X)

"""# 1.) Run a PCA Algorithm to get 2 Principle Components for the 9 X features"""

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

"""# 2.) Plot a Scatter plot of the PCs on the axis"""

plt.scatter(X_pca[:, 0], X_pca[:, 1])
plt.xlabel("PC1")
plt.ylabel("PC2")
plt.title("Score Plot")
plt.show()

"""# 3.) Rank the features in order of importance according to PCA"""

loadings = pca.components_
feature_importance = pd.DataFrame(np.sum(loadings**2, axis=0))
feature_names = df.columns[1:]
feature_importance.index = feature_names
feature_importance.sort_values(0, ascending=False)

"""# 4.) Plot a heatmap of the feature importance (Fill in all parameters)"""

sns.heatmap(loadings, annot=True, cmap='coolwarm', xticklabels=feature_names, yticklabels=["PC1", "PC2"], cbar_kws={'label':'Feature_importance'})

plt.xlabel('Original Features')
plt.ylabel('Principal Components')
plt.title('Loadings Heatmap')
plt.show()

"""# 5.) Plot a correlation plot of the original features. What do you notice between the graphs of 4 & 5?"""

sns.heatmap(X.corr(), cmap="coolwarm", annot=True)
plt.plot()

"""The variables with higher correlation tend to have similar feature importance in PCA algorithm.

# 6.) Run a PCA with 9 PCs. Plot a Cumulative Explained Variance Plot. How many PCs should we use if we want to retain 95% of the variance?
"""

pca = PCA(n_components=9)
X_pca = pca.fit_transform(X_scaled)

cumulative_explained_variance = pca.explained_variance_ratio_.cumsum()

plt.plot(np.arange(1, len(cumulative_explained_variance) + 1), cumulative_explained_variance, marker='o')
plt.xlabel('Number of Principal Components')
plt.ylabel('Cumulative Explained Variance')
plt.title('Cumulative Explained Variance Plot')
plt.axhline(y=0.95, color="red")
plt.grid()
plt.show()

"""Since the thershold is $95\%$, we should use $PCs=6$"""
